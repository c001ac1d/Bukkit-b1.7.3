diff --git a/original/TileEntityFurnace.java b/modified/TileEntityFurnace.java
index 718e1fca..1503cbdf 100644
--- a/original/TileEntityFurnace.java
+++ b/modified/TileEntityFurnace.java
@@ -1,5 +1,11 @@
 package net.minecraft.server;
 
+// CraftBukkit start
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.event.inventory.FurnaceBurnEvent;
+import org.bukkit.event.inventory.FurnaceSmeltEvent;
+// CraftBukkit end
+
 public class TileEntityFurnace extends TileEntity implements IInventory {
 
     private ItemStack[] items = new ItemStack[3];
@@ -7,6 +13,13 @@ public class TileEntityFurnace extends TileEntity implements IInventory {
     public int ticksForCurrentFuel = 0;
     public int cookTime = 0;
 
+    // CraftBukkit start
+    private int lastTick = (int) (System.currentTimeMillis() / 50);
+    public ItemStack[] getContents() {
+        return this.items;
+    }
+    // CraftBukkit end
+
     public TileEntityFurnace() {}
 
     public int getSize() {
@@ -100,14 +113,44 @@ public class TileEntityFurnace extends TileEntity implements IInventory {
         boolean flag = this.burnTime > 0;
         boolean flag1 = false;
 
+        // CraftBukkit start
+        int currentTick = (int) (System.currentTimeMillis() / 50); // CraftBukkit
+        int elapsedTicks = currentTick - this.lastTick;
+        this.lastTick = currentTick;
+
+        // CraftBukkit - moved from below
+        if (this.isBurning() && this.canBurn()) {
+            this.cookTime += elapsedTicks;
+            if (this.cookTime >= 200) {
+                this.cookTime %= 200;
+                this.burn();
+                flag1 = true;
+            }
+        } else {
+            this.cookTime = 0;
+        }
+        // CraftBukkit end
+
         if (this.burnTime > 0) {
-            --this.burnTime;
+            this.burnTime -= elapsedTicks; // CraftBukkit
         }
 
         if (!this.world.isStatic) {
-            if (this.burnTime == 0 && this.canBurn()) {
-                this.ticksForCurrentFuel = this.burnTime = this.fuelTime(this.items[1]);
-                if (this.burnTime > 0) {
+            // CraftBukkit start - handle multiple elapsed ticks
+            if (this.burnTime <= 0 && this.canBurn() && this.items[1] != null) { // CraftBukkit - == to <=
+                CraftItemStack fuel = new CraftItemStack(this.items[1]);
+
+                FurnaceBurnEvent furnaceBurnEvent = new FurnaceBurnEvent(this.world.getWorld().getBlockAt(this.x, this.y, this.z), fuel, this.fuelTime(this.items[1]));
+                this.world.getServer().getPluginManager().callEvent(furnaceBurnEvent);
+
+                if (furnaceBurnEvent.isCancelled()) {
+                    return;
+                }
+
+                this.ticksForCurrentFuel = furnaceBurnEvent.getBurnTime();
+                this.burnTime += this.ticksForCurrentFuel;
+                if (this.burnTime > 0 && furnaceBurnEvent.isBurning()) {
+                    // CraftBukkit end
                     flag1 = true;
                     if (this.items[1] != null) {
                         --this.items[1].count;
@@ -118,7 +161,8 @@ public class TileEntityFurnace extends TileEntity implements IInventory {
                 }
             }
 
-            if (this.isBurning() && this.canBurn()) {
+            /* CraftBukkit start - moved up
+            if (this.f() && this.process()) {
                 ++this.cookTime;
                 if (this.cookTime == 200) {
                     this.cookTime = 0;
@@ -128,6 +172,7 @@ public class TileEntityFurnace extends TileEntity implements IInventory {
             } else {
                 this.cookTime = 0;
             }
+            // CraftBukkit end */
 
             if (flag != this.burnTime > 0) {
                 flag1 = true;
@@ -146,7 +191,8 @@ public class TileEntityFurnace extends TileEntity implements IInventory {
         } else {
             ItemStack itemstack = FurnaceRecipes.getInstance().a(this.items[0].getItem().id);
 
-            return itemstack == null ? false : (this.items[2] == null ? true : (!this.items[2].doMaterialsMatch(itemstack) ? false : (this.items[2].count < this.getMaxStackSize() && this.items[2].count < this.items[2].getMaxStackSize() ? true : this.items[2].count < itemstack.getMaxStackSize())));
+            // CraftBukkit - consider resultant count instead of current count
+            return itemstack == null ? false : (this.items[2] == null ? true : (!this.items[2].doMaterialsMatch(itemstack) ? false : (this.items[2].count + itemstack.count <= this.getMaxStackSize() && this.items[2].count < this.items[2].getMaxStackSize() ? true : this.items[2].count + itemstack.count <= itemstack.getMaxStackSize())));
         }
     }
 
@@ -154,10 +200,29 @@ public class TileEntityFurnace extends TileEntity implements IInventory {
         if (this.canBurn()) {
             ItemStack itemstack = FurnaceRecipes.getInstance().a(this.items[0].getItem().id);
 
+            // CraftBukkit start
+            CraftItemStack source = new CraftItemStack(this.items[0]);
+            CraftItemStack result = new CraftItemStack(itemstack.cloneItemStack());
+
+            FurnaceSmeltEvent furnaceSmeltEvent = new FurnaceSmeltEvent(this.world.getWorld().getBlockAt(this.x, this.y, this.z), source, result);
+            this.world.getServer().getPluginManager().callEvent(furnaceSmeltEvent);
+
+            if (furnaceSmeltEvent.isCancelled()) {
+                return;
+            }
+
+            org.bukkit.inventory.ItemStack oldResult = furnaceSmeltEvent.getResult();
+            ItemStack newResult = new ItemStack(oldResult.getTypeId(), oldResult.getAmount(), oldResult.getDurability());
+            itemstack = newResult;
+
             if (this.items[2] == null) {
                 this.items[2] = itemstack.cloneItemStack();
             } else if (this.items[2].id == itemstack.id) {
-                ++this.items[2].count;
+                // CraftBukkit - compare damage too
+                if (this.items[2].damage == itemstack.damage) {
+                    this.items[2].count += itemstack.count;
+                }
+                // CraftBukkit end
             }
 
             --this.items[0].count;
