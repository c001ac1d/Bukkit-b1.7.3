diff --git a/original/InventoryPlayer.java b/modified/InventoryPlayer.java
index d6b45132..f25e699b 100644
--- a/original/InventoryPlayer.java
+++ b/modified/InventoryPlayer.java
@@ -5,10 +5,20 @@ public class InventoryPlayer implements IInventory {
     public ItemStack[] items = new ItemStack[36];
     public ItemStack[] armor = new ItemStack[4];
     public int itemInHandIndex = 0;
-    public EntityHuman d;
+    public EntityHuman d; // CraftBukkit - private -> public
     private ItemStack f;
     public boolean e = false;
 
+    // CraftBukkit start
+    public ItemStack[] getContents() {
+        return this.items;
+    }
+
+    public ItemStack[] getArmorContents() {
+        return this.armor;
+    }
+    // CraftBukkit end
+
     public InventoryPlayer(EntityHuman entityhuman) {
         this.d = entityhuman;
     }
@@ -41,6 +51,22 @@ public class InventoryPlayer implements IInventory {
         return -1;
     }
 
+    // CraftBukkit start - watch method above! :D
+    public int canHold(ItemStack itemstack) {
+        int remains = itemstack.count;
+        for (int i = 0; i < this.items.length; ++i) {
+            if (this.items[i] == null) return itemstack.count;
+
+            // Taken from firstPartial(ItemStack)
+            if (this.items[i] != null && this.items[i].id == itemstack.id && this.items[i].isStackable() && this.items[i].count < this.items[i].getMaxStackSize() && this.items[i].count < this.getMaxStackSize() && (!this.items[i].usesData() || this.items[i].getData() == itemstack.getData())) {
+                remains -= (this.items[i].getMaxStackSize() < this.getMaxStackSize() ? this.items[i].getMaxStackSize() : this.getMaxStackSize()) - this.items[i].count;
+            }
+            if (remains <= 0) return itemstack.count;
+        }
+        return itemstack.count - remains;
+    }
+    // CraftBukkit end
+
     private int k() {
         for (int i = 0; i < this.items.length; ++i) {
             if (this.items[i] == null) {
