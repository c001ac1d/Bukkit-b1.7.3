diff --git a/original/ItemRedstone.java b/modified/ItemRedstone.java
index f811209c..f50305bd 100644
--- a/original/ItemRedstone.java
+++ b/modified/ItemRedstone.java
@@ -1,5 +1,11 @@
 package net.minecraft.server;
 
+// CraftBukkit start
+import org.bukkit.craftbukkit.block.CraftBlockState;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.block.BlockPlaceEvent;
+// CraftBukkit end
+
 public class ItemRedstone extends Item {
 
     public ItemRedstone(int i) {
@@ -7,6 +13,8 @@ public class ItemRedstone extends Item {
     }
 
     public boolean a(ItemStack itemstack, EntityHuman entityhuman, World world, int i, int j, int k, int l) {
+        int clickedX = i, clickedY = j, clickedZ = k; // CraftBukkit
+
         if (world.getTypeId(i, j, k) != Block.SNOW.id) {
             if (l == 0) {
                 --j;
@@ -38,8 +46,22 @@ public class ItemRedstone extends Item {
         }
 
         if (Block.REDSTONE_WIRE.canPlace(world, i, j, k)) {
-            --itemstack.count;
-            world.setTypeId(i, j, k, Block.REDSTONE_WIRE.id);
+            CraftBlockState blockState = CraftBlockState.getBlockState(world, i, j, k); // CraftBukkit
+
+            world.setRawTypeId(i, j, k, Block.REDSTONE_WIRE.id); // CraftBukkit - We update after the event
+
+            // CraftBukkit start - redstone
+            BlockPlaceEvent event = CraftEventFactory.callBlockPlaceEvent(world, entityhuman, blockState, clickedX, clickedY, clickedZ, Block.REDSTONE_WIRE);
+
+            if (event.isCancelled() || !event.canBuild()) {
+                event.getBlockPlaced().setTypeIdAndData(blockState.getTypeId(), blockState.getRawData(), false);
+                return false;
+            }
+
+            world.update( i, j, k, Block.REDSTONE_WIRE.id); // Must take place after BlockPlaceEvent, we need to update all other blocks.
+            // CraftBukkit end
+
+            --itemstack.count; // CraftBukkit - ORDER MATTERS
         }
 
         return true;
