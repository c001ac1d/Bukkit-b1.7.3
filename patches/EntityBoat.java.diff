diff --git a/original/EntityBoat.java b/modified/EntityBoat.java
index 79aa9c42..c090d6e6 100644
--- a/original/EntityBoat.java
+++ b/modified/EntityBoat.java
@@ -2,6 +2,18 @@ package net.minecraft.server;
 
 import java.util.List;
 
+// CraftBukkit start
+import org.bukkit.Location;
+import org.bukkit.entity.Vehicle;
+import org.bukkit.event.vehicle.VehicleCreateEvent;
+import org.bukkit.event.vehicle.VehicleDamageEvent;
+import org.bukkit.event.vehicle.VehicleDestroyEvent;
+import org.bukkit.event.vehicle.VehicleEnterEvent;
+import org.bukkit.event.vehicle.VehicleEntityCollisionEvent;
+import org.bukkit.event.vehicle.VehicleMoveEvent;
+import org.bukkit.event.vehicle.VehicleUpdateEvent;
+// CraftBukkit end
+
 public class EntityBoat extends Entity {
 
     public int damage;
@@ -14,6 +26,24 @@ public class EntityBoat extends Entity {
     private double h;
     private double i;
 
+    // CraftBukkit start
+    public double maxSpeed = 0.4D;
+
+    @Override
+    public void collide(Entity entity) {
+        org.bukkit.entity.Entity hitEntity = (entity == null) ? null : entity.getBukkitEntity();
+
+        VehicleEntityCollisionEvent event = new VehicleEntityCollisionEvent((Vehicle) this.getBukkitEntity(), hitEntity);
+        this.world.getServer().getPluginManager().callEvent(event);
+
+        if (event.isCancelled()) {
+            return;
+        }
+
+        super.collide(entity);
+    }
+    // CraftBukkit end
+
     public EntityBoat(World world) {
         super(world);
         this.damage = 0;
@@ -51,6 +81,8 @@ public class EntityBoat extends Entity {
         this.lastX = d0;
         this.lastY = d1;
         this.lastZ = d2;
+
+        this.world.getServer().getPluginManager().callEvent(new VehicleCreateEvent((Vehicle) this.getBukkitEntity())); // CraftBukkit
     }
 
     public double m() {
@@ -59,11 +91,35 @@ public class EntityBoat extends Entity {
 
     public boolean damageEntity(Entity entity, int i) {
         if (!this.world.isStatic && !this.dead) {
+            // CraftBukkit start
+            Vehicle vehicle = (Vehicle) this.getBukkitEntity();
+            org.bukkit.entity.Entity attacker = (entity == null) ? null : entity.getBukkitEntity();
+
+            VehicleDamageEvent event = new VehicleDamageEvent(vehicle, attacker, i);
+            this.world.getServer().getPluginManager().callEvent(event);
+
+            if (event.isCancelled()) {
+                return true;
+            }
+            // i = event.getDamage(); // TODO Why don't we do this?
+            // CraftBukkit end
+
             this.c = -this.c;
             this.b = 10;
             this.damage += i * 10;
             this.af();
             if (this.damage > 40) {
+
+                // CraftBukkit start
+                VehicleDestroyEvent destroyEvent = new VehicleDestroyEvent(vehicle, attacker);
+                this.world.getServer().getPluginManager().callEvent(destroyEvent);
+
+                if (destroyEvent.isCancelled()) {
+                    this.damage = 40; // Maximize damage so this doesn't get triggered again right away
+                    return true;
+                }
+                // CraftBukkit end
+
                 if (this.passenger != null) {
                     this.passenger.mount(this);
                 }
@@ -92,6 +148,14 @@ public class EntityBoat extends Entity {
     }
 
     public void m_() {
+        // CraftBukkit start
+        double prevX = this.locX;
+        double prevY = this.locY;
+        double prevZ = this.locZ;
+        float prevYaw = this.yaw;
+        float prevPitch = this.pitch;
+        // CraftBukkit end
+
         super.m_();
         if (this.b > 0) {
             --this.b;
@@ -173,7 +237,8 @@ public class EntityBoat extends Entity {
                 this.motZ += this.passenger.motZ * 0.2D;
             }
 
-            d3 = 0.4D;
+            // CraftBukkit
+            d3 = this.maxSpeed;
             if (this.motX < -d3) {
                 this.motX = -d3;
             }
@@ -269,6 +334,23 @@ public class EntityBoat extends Entity {
 
             this.yaw = (float) ((double) this.yaw + d12);
             this.c(this.yaw, this.pitch);
+
+            // CraftBukkit start
+            org.bukkit.Server server = this.world.getServer();
+            org.bukkit.World bworld = this.world.getWorld();
+
+            Location from = new Location(bworld, prevX, prevY, prevZ, prevYaw, prevPitch);
+            Location to = new Location(bworld, this.locX, this.locY, this.locZ, this.yaw, this.pitch);
+            Vehicle vehicle = (Vehicle) this.getBukkitEntity();
+
+            server.getPluginManager().callEvent(new VehicleUpdateEvent(vehicle));
+
+            if (!from.equals(to)) {
+                VehicleMoveEvent event = new VehicleMoveEvent(vehicle, from, to);
+                server.getPluginManager().callEvent(event);
+            }
+            // CraftBukkit end
+
             List list = this.world.b((Entity) this, this.boundingBox.b(0.20000000298023224D, 0.0D, 0.20000000298023224D));
             int l;
 
@@ -293,6 +375,7 @@ public class EntityBoat extends Entity {
             }
 
             if (this.passenger != null && this.passenger.dead) {
+                this.passenger.vehicle = null; // CraftBukkit
                 this.passenger = null;
             }
         }
@@ -316,6 +399,15 @@ public class EntityBoat extends Entity {
             return true;
         } else {
             if (!this.world.isStatic) {
+                // CraftBukkit start
+                VehicleEnterEvent event = new VehicleEnterEvent((Vehicle) this.getBukkitEntity(), entityhuman.getBukkitEntity());
+                this.world.getServer().getPluginManager().callEvent(event);
+
+                if (event.isCancelled()) {
+                    return true;
+                }
+                // CraftBukkit end
+
                 entityhuman.mount(this);
             }
 
